name: Deploy applications, re-usable
on:
  workflow_call:
    inputs:
      channel:
        description: 'Slack channel'
        required: false
        type: string
        default: 'eresept'
      footer:
        description: 'Slack footer'
        required: false
        type: string
        default: 'eresept Â© 2022'
      applications:
        description: 'The applications to deploy (stringified JSON object listing application, eg: "[\"foo\",\"bar\"]")'
        required: true
        type: string
        # no default
      application-version:
        description: 'The version to deploy'
        required: false
        type: string
        # no default
      environments:
        description: 'The environments to deploy applications to (stringified JSON object listing application, eg: "[\"q1\",\"p\"]")'
        required: true
        type: string
        # no default
    secrets:
      webhook:
        description: 'Slack webhook'
        required: true
      deploy-key:
        description: 'NAIS deploy apikey'
        required: true
      token:
        description: 'token'
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        application: ${{ fromJson(inputs.applications) }}
        environment: ${{ fromJson(inputs.environments) }}
    name: Deploy ${{ matrix.application }} ${{ inputs.application-version }} to ${{ matrix.environment }}
    steps:
      - uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8 #v3.1.0
        with:
          fetch-depth: 0
          repository: navikt/${{ matrix.application }}
          token: ${{ secrets.token }}

      - name: Start time and timezone
        run: |
          echo "starttime=$(date +%s)" >> $GITHUB_ENV
          sudo timedatectl set-timezone "Europe/Oslo"

      - name: Get version numbers and cluster
        run: |
          LASTVERSION=$(git tag --sort=-version:refname|head -1|tr -d 'v')
          INPUT_VERSION=${{ inputs.application-version }}
          RELVERSION=$(echo ${INPUT_VERSION:-$LASTVERSION}|sed 's/-.*//')
          echo "relversion=$RELVERSION" >> $GITHUB_ENV
          echo "cluster=$(if [ "${{ matrix.environment }}" == "p" ]; then echo prod-fss; else echo dev-fss ; fi)" >> $GITHUB_ENV
          POSTFIX=$(if [ '${{ matrix.environment }}' != 'p' -a '${{ matrix.environment }}' != 'q1' ]; then echo '-${{ matrix.environment }}'; else echo ''; fi)
          echo "deployapp=${{ matrix.application }}$POSTFIX" >> $GITHUB_ENV
          echo "deployappver=${{ matrix.application }}$POSTFIX:$RELVERSION" >> $GITHUB_ENV
          echo "deploydate=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV

      - name: Deploy ${{ env.deployapp }} to ${{matrix.environment }}
        uses: nais/deploy/actions/deploy@e36511e00cb9aaa8ef867a2bb7a092fc5b222e8b #v1
        env:
          APIKEY: ${{ secrets.deploy-key }}
          CLUSTER: ${{ env.cluster }}
          RESOURCE: .nais/nais.yaml
          VARS: .nais/nais.vars.${{ matrix.environment }}.yaml
          IMAGE: ghcr.io/navikt/${{ matrix.application }}/${{ matrix.application }}:${{ env.relversion }}

      - name: Calculate execution time
        run: |
          END_TIME=$(date +%s)
          echo "exectime=$(( $END_TIME - ${{ env.starttime }} ))" >> $GITHUB_ENV

      - name: Checkout badges
        uses: navikt/eresept-actions/badges-checkout@main

      - name: Deploy version badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: '${{ matrix.environment }} version'
          right: '${{ env.relversion }}'
          color: 'blue'
          filename: 'deploy-version-${{ matrix.environment }}'
          logo: 'tag'

      - name: Deploy date badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: '${{ matrix.environment }} date'
          right: '${{ env.deploydate }}'
          color: 'blue'
          filename: 'deploy-date-${{ matrix.environment }}'
          logo: 'calendar'

      - name: Commit badges
        uses: navikt/eresept-actions/badges-commit@main

      - name: Summary
        run: echo "### Deployed **${{ env.deployappver }}** to **${{ matrix.environment }}** in **${{ env.cluster }}** in ${{ env.exectime }} seconds" >> $GITHUB_STEP_SUMMARY

      - name: Report success?
        if: success()
        env:
          SLACK_CHANNEL: ${{ inputs.channel }}
          SLACK_WEBHOOK: ${{ secrets.webhook }}
          SLACK_USERNAME: "deploy ${{ env.deployappver }} -> ${{ matrix.environment }}"
          SLACK_TITLE: "Deployed _*${{ env.deployappver }}*_ to _*${{ matrix.environment }}*_ in _*${{ env.cluster }}*_ in ${{ env.exectime }} seconds"
          SLACK_MESSAGE: "${{ env.deployappver }}"
          SLACK_COLOR: "good"
          SLACK_ICON_EMOJI: ":nais:"
          MSG_MINIMAL: true
          SLACK_FOOTER: "${{ inputs.footer }}"
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # v2
      - name: Report failure?
        if: failure()
        env:
          SLACK_CHANNEL: ${{ inputs.channel }}
          SLACK_WEBHOOK: ${{ secrets.webhook }}
          SLACK_USERNAME: "deploy ${{ env.deployappver }} -> ${{ matrix.environment }}"
          SLACK_TITLE: "Deploy of _*${{ env.deployappver }}*_ to _*${{ matrix.environment }}*_ in _*${{ env.cluster }}*_ failed"
          SLACK_COLOR: "danger"
          SLACK_ICON_EMOJI: ":nais:"
          SLACK_MESSAGE: "See https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} for details"
          SLACK_FOOTER: "${{ inputs.footer }}"
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # v2
      - name: Report cancellation?
        if: cancelled()
        env:
          SLACK_CHANNEL: ${{ inputs.channel }}
          SLACK_WEBHOOK: ${{ secrets.webhook }}
          SLACK_USERNAME: "deploy ${{ env.deployappver }} -> ${{ matrix.environment }}"
          SLACK_TITLE: "Deploy of _*${{ env.deployappver }}*_ to _*${{ env.cluster }}*_ in _*${{ env.cluster }}*_ was cancelled"
          SLACK_MESSAGE: "${{ env.deployappver }}"
          SLACK_COLOR: "warning"
          SLACK_ICON_EMOJI: ":nais:"
          MSG_MINIMAL: true
          SLACK_FOOTER: "${{ inputs.footer }}"
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # v2
