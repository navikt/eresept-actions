name: Deploy application, re-usable
on:
  workflow_call:
    inputs:
      channel:
        description: 'Slack channel'
        required: false
        type: string
        default: 'eresept'
      username:
        description: 'Slack username'
        required: false
        type: string
        default: 'eresept deploy application action: ${{ github.event.repository.name }}'
      footer:
        description: 'Slack footer'
        required: false
        type: string
        default: 'eresept Â© 2022'
      application:
        description: 'The application to deploy'
        required: true
        type: string
        # no default
      applicationVersion:
          description: 'The version to deploy'
          required: false
          type: string
          # no default
      environment:
        description: 'The environment to deploy application to'
        required: true
        type: string
        # no default
    secrets:
      webhook:
        description: 'Slack webhook'
        required: true
      deployKey:
        description: 'NAIS deploy apikey'
        required: true

jobs:
  deploy:
    name: Deoploy application ${{ inputs.application }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          repository: navikt/${{ inputs.application }}
      - uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Get start time
        id: starttime
        run: echo "::set-output name=starttime::$(date +%s)"

      - name: Set timezone
        run: sudo timedatectl set-timezone "Europe/Oslo"

      - name: Get version numbers and cluster
        id: vals
        run: |
          LASTVERSION=$(git tag --sort=-version:refname|head -1|tr -d 'v')
          INPUT_VERSION=${{ inputs.applicationVersion }}
          echo "::set-output name=relversion::$(echo ${INPUT_VERSION:-$LASTVERSION}|sed 's/-.*//')"
          echo "::set-output name=cluster::$(if [ "${{ inputs.environment }}" == "p" ]; then echo prod-fss; else echo dev-fss ; fi)"
          POTSFIX=$(if [ '${{ inputs.environment }}' != 'p' -a '${{ inputs.environment }}' != 'q1' ]; then echo '-${{ inputs.environment }}'; fi)
          echo "::set-output name=deployapp::${{ inputs.application }}$POSTFIX"

      - name: Deploy ${{ steps.vals.outputs.deployapp }} to ${{inputs.environment }}
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.deployKey }}
          CLUSTER: ${{ steps.vals.outputs.cluster }}
          RESOURCE: nais.yaml
          VARS: nais.vars.${{ inputs.environment }}.yaml
          IMAGE: ghcr.io/navikt/${{ inputs.application }}/${GITHUB_REPOSITORY#*/}:${{ steps.vals.outputs.relversion }}

      - name: Calculate execution time
        id: exectime
        run: |
          END_TIME=$(date +%s)
          echo "::set-output name=exectime::$(( $END_TIME - ${{ steps.starttime.outputs.starttime }} ))"

      - name: Report success?
        if: success()
        env:
          SLACK_CHANNEL: ${{ inputs.channel }}
          SLACK_WEBHOOK: ${{ secrets.webhook }}
          SLACK_USERNAME: "${{ inputs.username }}"
          SLACK_TITLE: "Successfully deployed application _*${{ steps.vals.outputs.deployapp }}:${{ steps.version.outputs.relversion }}*_ to environment _*${{ inputs.environment }}*_ in cluster _*${{ steps.vals.outputs.cluster }}*_ in ${{ steps.exectime.outputs.exectime }} seconds"
          SLACK_MESSAGE: ""
          SLACK_COLOR: "good"
          SLACK_ICON: https://github.com/github.png?size=48
          MSG_MINIMAL: true
          SLACK_FOOTER: "${{ inputs.footer }}"
        uses: rtCamp/action-slack-notify@v2
      - name: Report failure?
        if: failure()
        env:
          SLACK_CHANNEL: ${{ inputs.channel }}
          SLACK_WEBHOOK: ${{ secrets.webhook }}
          SLACK_USERNAME: "${{ inputs.username }}"
          SLACK_TITLE: "Failed to deploy application _*${{ steps.vals.outputs.deployapp }}:${{ steps.version.outputs.relversion }}*_ to _*${{ steps.vals.outputs.cluster }}*_"
          SLACK_MESSAGE: ""
          SLACK_COLOR: "danger"
          SLACK_ICON: https://github.com/github.png?size=48
          MSG_MINIMAL: true
          SLACK_FOOTER: "${{ inputs.footer }}"
        uses: rtCamp/action-slack-notify@v2
      - name: Report cancellation?
        if: cancelled()
        env:
          SLACK_CHANNEL: ${{ inputs.channel }}
          SLACK_WEBHOOK: ${{ secrets.webhook }}
          SLACK_USERNAME: "${{ inputs.username }}"
          SLACK_TITLE: "Deploy of application _*${{ steps.vals.outputs.deployapp }}:${{ steps.version.outputs.relversion }}*_ to _*${{ steps.vals.outputs.cluster }}*_ was cancelled"
          SLACK_MESSAGE: ""
          SLACK_COLOR: "warning"
          SLACK_ICON: https://github.com/github.png?size=48
          MSG_MINIMAL: true
          SLACK_FOOTER: "${{ inputs.footer }}"
        uses: rtCamp/action-slack-notify@v2
