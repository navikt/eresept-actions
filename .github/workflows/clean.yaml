name: Clean, re-usable
# deletes packages. does no pagination, so if package has more than 100 versions the oldest
# versions will not be deleted before the number of versions is below 101
on:
  workflow_call:
    inputs:
      package:
        description: 'the package to clean, if type is container the repo name and colon must be omitted, mandatory if type is maven, defaults to repository name (without owner) if type is container'
        required: false
        default: ''
        type: string
      type:
        description: 'the package type, only container and maven is supported'
        required: false
        type: string
        default: 'container'
      old-versions-to-delete:
        description: 'the maximum number of old versions to delete'
        required: false
        default: 1
        type: number
      versions-to-keep:
        description: 'the minimum number of old versions to keep'
        required: false
        default: 20
        type: number
      dry-run:
        description: 'false if cleaning should be done, true if do a dry run without deleting packages'
        required: false
        default: true
        type: boolean
    secrets:
      token:
        description: 'github token'
        required: true

jobs:
  clean:
    runs-on: ubuntu-latest
    steps:
      - name: clean
        run: |
          if [ "${{ inputs.type }}" != "container" ] && [ "${{ inputs.type }}" != "maven" ]
          then
            echo "invalid package type, only container and maven is supported"
            exit 1
          fi
          echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#*/}" >> $GITHUB_ENV
          if [ "${{ inputs.type }}" = "maven" ]
          then
            if [ -z ""${{ inputs.package }}" ]
            then
              echo "package is mandatory if type is maven"
              exit 1
            fi
            PKG="${{ inputs.package }}"
          else
            if [ -z "${{ inputs.package }}" ]
            then
              PKG="$REPOSITORY_NAME%2F$REPOSITORY_NAME"
            else
              PKG="$REPOSITORY_NAME%2F${{ inputs.package }}"
            fi
          fi
          TOTAL=$(curl -s -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.token }}" "https://api.github.com/orgs/navikt/packages/${{ inputs.type }}/$PKG/versions?per_page=100" | jq 'length')
          echo "package has $TOTAL versions (100 means 100 or more) before cleanup" >> $GITHUB_STEP_SUMMARY
          TAIL=$(echo $TOTAL - ${{ inputs.versions-to-keep }} | bc)
          if [ $TAIL -gt ${{ inputs.old-versions-to-delete }} ]
          then
            TAIL=${{ inputs.old-versions-to-delete }}
          fi
          if [ $TAIL -gt 0 ]
          then
            echo "will attempt to delete $TAIL versions" >> $GITHUB_STEP_SUMMARY
            TRANSFORMED=$(curl -s -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.token }}" "https://api.github.com/orgs/navikt/packages/${{ inputs.type }}/$PKG/versions?per_page=100" | jq "[.[] |{id: .id, created_at: .created_at, version: .metadata.container.tags[0] }]" | jq ".[-$TAIL:]")
            echo "will delete the following packages from $REPOSITORY_NAME:"
            echo $TRANSFORMED | jq
            VERSIONS=$(echo $TRANSFORMED | jq ".[] .id" | tr '\012' ' ')
            for v in $VERSIONS
            do
              echo deleting $v
              if [ "${{ inputs.dry-run }}" = "false" ]
              then
                curl -s -X DELETE -H "Accept: application/vnd.github+json" -H "Authorization: token ${{ secrets.token }}" "https://api.github.com/orgs/navikt/packages/${{ inputs.type }}/$PKG/versions/$v"
              fi
            done
            if [ "${{ inputs.dry-run }}" = "false" ]
            then
              echo "$TAIL versions deleted" >> $GITHUB_STEP_SUMMARY
            else
              echo "dry run: 0 versions deleted" >> $GITHUB_STEP_SUMMARY
            fi
          else
              echo "no versions to delete" >> $GITHUB_STEP_SUMMARY
          fi