name: Gradle build, re-usable
on:
  workflow_call:
    inputs:
      java-version:
        description: the java version to use
        required: false
        type: number
        default: 21
      coverage-task:
        description: 'name of coverage task'
        required: false
        default: 'jacocoTestReport'
        type: string
      coverage-report-dir:
        description: 'path to coverage report'
        required: false
        default: 'build/reports/jacoco/test'
        type: string
    secrets:
      webhook:
        description: 'slack webhook'
        required: false
      token:
        description: 'github token'
        required: true

env:
  TZ: Europe/Oslo

jobs:
  build:
    timeout-minutes: 30
    name: Build ${{ github.event.repository.name }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.repository.name }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      actions: read
      issues: read
      checks: write
      contents: write
      pull-requests: write
      security-events: write
    env:
      slack_webhook: ${{ secrets.webhook }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 #v4.2.2
        with:
          persist-credentials: true

      - uses: gradle/actions/wrapper-validation@ac638b010cf58a27ee6c972d7336334ccaf61c96 # v4.4.1

      - uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 #v4.7.1
        with:
          distribution: 'temurin'
          java-version: '${{ inputs.java-version }}'

      - name: Set some variables
        run: |
          echo "starttime=$(date +%s)" >> $GITHUB_ENV
          sudo timedatectl set-timezone "Europe/Oslo"
          echo "lastcommit=$(git log -1 --date=format:'%Y-%m-%d %T' --format=%cd)" >> $GITHUB_ENV

      - name: Get commit message
        run: |
          echo "commit_msg=$(git log -1 --oneline)" >> $GITHUB_ENV
          echo "commit_sha=$(git log -1 --format=%H)" >> $GITHUB_ENV

      - name: Initialze CodeQL Analysis
        uses: github/codeql-action/init@51f77329afa6477de8c49fc9c7046c15b9a4e79d # v3.29.5
        with:
          languages: java

      - name: Setup gradle
        uses: gradle/actions/setup-gradle@ac638b010cf58a27ee6c972d7336334ccaf61c96 # v4.4.1
        with:
          dependency-graph: generate-and-submit

      - name: Build with gradle
        env:
          GITHUB_TOKEN: ${{ secrets.token }}
          TASK: ${{ inputs.coverage-task }}
        run: ./gradlew ${TASK} --no-daemon

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@51f77329afa6477de8c49fc9c7046c15b9a4e79d # v3.29.5
        with:
          category: "/language:java"

#      - name: Publish results (unit test)
#        uses: EnricoMi/publish-unit-test-result-action@afb2984f4d89672b2f9d9c13ae23d53779671984 #v2.19.0
#        if: success() || failure()
#        with:
#          files: "**/build/test-results/test/TEST-*.xml"

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@3585e9575db828022551b4231f165eb59a0e74e3 #v5
        if: success() || failure()
        with:
          include_time_in_summary: 'true'
          include_passed: 'false'
          detailed_summary: 'true'
          report_paths: '**/build/test-results/test/TEST-*.xml'

      - name: Checkout badges
        if: ${{ github.event_name != 'pull_request' }}
        uses: navikt/eresept-actions/badges-checkout@main

      - name: Create coverage badges
        if: ${{ github.event_name != 'pull_request' }}
        uses: navikt/eresept-actions/badges-jacoco@main
        with:
          jacoco-dir: ${{ inputs.coverage-report-dir }}
          jacoco-name: ${{ inputs.coverage-task }}.csv

      - name: Last commit badge
        if: ${{ github.event_name != 'pull_request' }}
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'last commit'
          right: '${{ env.lastcommit }}'
          color: 'blue'
          filename: 'last-commit'
          logo: 'calendar'

      - name: Calculate execution time
        run: |
          END_TIME=$(date +%s)
          echo "exectime=$(( $END_TIME - ${starttime} ))" >> $GITHUB_ENV

      - name: Time used badge
        if: ${{ github.event_name != 'pull_request' }}
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'build execution time'
          right: '${{ env.exectime }}'
          color: 'blue'
          filename: 'build-exec-time'
          logo: 'stopwatch'

      - name: Commit badges
        if: ${{ github.event_name != 'pull_request' }}
        uses: navikt/eresept-actions/badges-commit@main

      - name: Summary
        run: echo "### Built **${REPO}** in ${exectime} seconds" >> $GITHUB_STEP_SUMMARY
        env:
          REPO: ${{ github.event.repository.name }}

      - name: report to slack
        if: always()
        uses: navikt/eresept-actions/slack-notify@main
        with:
          status: "${{ job.status }}"
          username: "build ${{ github.event.repository.name }}"
          icon: ":github2:"
          title-success: "Built _*${{ github.event.repository.name }}*_ in ${{ env.exectime }} seconds"
          title-failure: "Build failure in _*${{ github.event.repository.name }}*_"
          title-cancelled: "Build of _*${{ github.event.repository.name }}*_ was cancelled"
          message-success: "${{ env.commit_msg }}"
          message-cancelled: "${{ env.commit_msg }}"
          webhook: ${{ secrets.webhook }}
