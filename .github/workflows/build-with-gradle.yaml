name: Gradle build, re-usable
on:
  workflow_call:
    secrets:
      webhook:
        description: 'slack webhook'
        required: false
      token:
        description: 'github token'
        required: true

jobs:
  build:
    timeout-minutes: 30
    name: Build ${{ github.event.repository.name }}
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.event.repository.name }}-${{ github.ref }}
      cancel-in-progress: true
    permissions:
      contents: write
    env:
      slack_webhook: ${{ secrets.webhook }}
    steps:
      - uses: actions/checkout@c85c95e3d7251135ab7dc9ce3241c5835cc595a9 #v3.5.3

      - uses: actions/setup-java@cd89f46ac9d01407894225f350157564c9c7cee2 #v3.12.0
        with:
          distribution: 'temurin'
          java-version: '19'
          cache: gradle

      - name: Set some variables
        run: |
          echo "starttime=$(date +%s)" >> $GITHUB_ENV
          sudo timedatectl set-timezone "Europe/Oslo"
          echo "lastcommit=$(git log -1 --date=format:'%Y-%m-%d %T' --format=%cd)" >> $GITHUB_ENV

      - name: Get commit message
        run: |
          echo "commit_msg=$(git log -1 --oneline)" >> $GITHUB_ENV
          echo "commit_sha=$(git log -1 --format=%H)" >> $GITHUB_ENV

      - name: Compile and test
        run: ./gradlew build jacocoTestReport --no-daemon

      - name: Publish results (unit test)
        uses: EnricoMi/publish-unit-test-result-action@f0b5d2433f350eff587831d4ad22cb15aab75866 #v2.8.0
        if: success() || failure()
        with:
          junit_files: "**/build/test-results/test/TEST-*.xml"

      - name: Checkout badges
        if: ${{ github.event_name != 'pull_request' }}
        uses: navikt/eresept-actions/badges-checkout@main

      - name: Create coverage badges
        if: ${{ github.event_name != 'pull_request' }}
        uses: navikt/eresept-actions/badges-jacoco@main
        with:
          jacoco-dir: build/reports/jacoco/test
          jacoco-name: jacocoTestReport.csv

      - name: Last commit badge
        if: ${{ github.event_name != 'pull_request' }}
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'last commit'
          right: '${{ env.lastcommit }}'
          color: 'blue'
          filename: 'last-commit'
          logo: 'calendar'

      - name: Calculate execution time
        run: |
          END_TIME=$(date +%s)
          echo "exectime=$(( $END_TIME - ${{ env.starttime }} ))" >> $GITHUB_ENV

      - name: Time used badge
        if: ${{ github.event_name != 'pull_request' }}
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'build execution time'
          right: '${{ env.exectime }}'
          color: 'blue'
          filename: 'build-exec-time'
          logo: 'stopwatch'

      - name: Commit badges
        if: ${{ github.event_name != 'pull_request' }}
        uses: navikt/eresept-actions/badges-commit@main

      - name: Summary
        run: echo "### Built **${{ github.event.repository.name }}** in ${{ env.exectime }} seconds" >> $GITHUB_STEP_SUMMARY

      - name: report to slack
        if: always()
        uses: navikt/eresept-actions/slack-notify@main
        with:
          status: "${{ job.status }}"
          username: "build ${{ github.event.repository.name }}"
          icon: ":github2:"
          title-success: "Built _*${{ github.event.repository.name }}*_ in ${{ env.exectime }} seconds"
          title-failure: "Build failure in _*${{ github.event.repository.name }}*_"
          title-cancelled: "Build of _*${{ github.event.repository.name }}*_ was cancelled"
          message-success: "${{ env.commit_msg }}"
          message-cancelled: "${{ env.commit_msg }}"
          webhook: ${{ secrets.webhook }}
