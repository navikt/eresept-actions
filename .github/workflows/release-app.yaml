name: maven release application, re-usable
on:
  workflow_call:
    inputs:
      java-version:
        description: the java version to use
        required: false
        type: number
        default: 21
      application:
        description: 'The application to release'
        required: true
        type: string
        # no default
      application-version:
        description: 'The version to release'
        required: false
        type: string
        # no default
      skip-tests:
        description: 'if execution of tests should be skipped'
        required: false
        type: boolean
        default: false
    secrets:
      webhook:
        required: true
      token:
        required: true

env:
  TZ: Europe/Oslo

jobs:
  release:
    timeout-minutes: 40
    name: Release ${{ inputs.application }}
    runs-on: ubuntu-latest
    permissions:
      actions: read # for private repositories
      contents: write
      id-token: write
      security-events: write # push sarif to github security
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 #v5.0.0
        with:
          fetch-depth: 0
          repository: ${{ github.event.repository.owner.login }}/${{ inputs.application }}
          ref: '${{ github.ref_name }}'
          persist-credentials: true
          show-progress: false

      - name: Create settings.xml
        uses: whelk-io/maven-settings-xml-action@9dc09b23833fa9aa7f27b63db287951856f3433d #v22
        with:
          repositories: '[{ "id": "eresept-parent", "name": "github", "url": "https://maven.pkg.github.com/navikt/eresept-parent", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } }, { "id": "xerces", "name": "github", "url": "https://maven.pkg.github.com/navikt/xerces-xmlschema-1.1", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } }]'
          servers: '[{ "id": "eresept-parent", "username": "${{ github.actor }}", "password": "${{ secrets.token }}" }, { "id": "xerces", "username": "${{ github.actor }}", "password": "${{ secrets.token }}" }]'
          output_file: maven-settings.xml

      - uses: actions/setup-java@c5195efecf7bdfc987ee8bae7a71cb8b11521c00 #v4.7.1
        with:
          distribution: 'temurin'
          java-version: '${{ inputs.java-version }}'
          overwrite-settings: true

      - name: Cache local Maven repository
        uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ inputs.application }}

      - name: Get start time
        run: |
          echo "starttime=$(date +%s)" >> $GITHUB_ENV
          sudo timedatectl set-timezone "Europe/Oslo"

      - name: get versions, changelog and more
        id: get-versions
        uses: navikt/eresept-actions/get-versions-and-more@main
        with:
          application-version: '${{ inputs.application-version }}'

      - name: Compile and test
        run: |
          mvn --batch-mode versions:set -DnewVersion=${NEXT_VERSION} -DgenerateBackupPoms=false -DprocessAllModules=true --settings maven-settings.xml
          SKIPTESTS=$(if [ "${SKIP}" = "true" ]; then echo "-DskipTests"; else echo ""; fi) 
          mvn --batch-mode clean install --no-transfer-progress $SKIPTESTS -Ddetekt.skip=${SKIP} --settings maven-settings.xml
        env:
          SKIP: ${{ inputs.skip-tests }}
          NEXT_VERSION: ${{ steps.get-versions.outputs.next-version }}

      - name: Tag
        run: |
          git tag -a ${NEXT_VERSION} -m "tagging as ${NEXT_VERSION}"
          git push origin ${NEXT_VERSION}
        env:
          NEXT_VERSION: ${{ steps.get-versions.outputs.next-version }}

      - name: Docker build and push
        id: docker-push
        uses: nais/docker-build-push@791ebb6f74b82849c742a9bc9c97abe44c6c111f # v0
        with:
          team: teameresept
          docker_context: ${{ steps.get-versions.outputs.docker-dir }}
          dockerfile: ${{ steps.get-versions.outputs.docker-dir }}/Dockerfile
          tag: ${{ steps.get-versions.outputs.next-version }}
          build_args: |
            version=${{ steps.get-versions.outputs.next-version }}
            app_name=${{ inputs.application }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@dc5a429b52fcf669ce959baa2c2dd26090d2a6c4 # v0.32.0
        with:
          image-ref: '${{ steps.docker-push.outputs.image }}'
          format: 'sarif'
          hide-progress: true
          output: 'trivy-results.sarif'
          severity: 'MEDIUM,HIGH,CRITICAL'
          limit-severities-for-sarif: true

      - name: Upload results to GitHub Security
        uses: github/codeql-action/upload-sarif@df559355d593797519d70b90fc8edd5db049e7a2 # v3.29.5
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Checkout badges
        uses: navikt/eresept-actions/badges-checkout@main

      - name: Calculate execution time
        run: |
          END_TIME=$(date +%s)
          echo "exectime=$(( $END_TIME - ${starttime} ))" >> $GITHUB_ENV

      - name: Version badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'version'
          right: '${{ steps.get-versions.outputs.next-version }}'
          color: 'blue'
          filename: 'version'
          logo: 'tag'

      - name: Release date badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'release date'
          right: '${{ steps.get-versions.outputs.current-datetime }}'
          color: 'blue'
          filename: 'rel-date'
          logo: 'calendar'

      - name: Time used badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'release execution time'
          right: '${{ env.exectime }}'
          color: 'blue'
          filename: 'rel-exec-time'
          logo: 'stopwatch'

      - name: Scan date badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'scanned'
          right: '${{ steps.get-versions.outputs.current-datetime }}'
          color: 'blue'
          filename: 'scan-date'
          logo: 'shield'

      - name: Commit badges
        uses: navikt/eresept-actions/badges-commit@main

      - name: Summary
        run: |
          echo "### Released **${REPO}:${NEXT_VERSION}** in ${exectime} seconds" >> $GITHUB_STEP_SUMMARY
        env:
          REPO: ${{ github.event.repository.name }}
          NEXT_VERSION: ${{ steps.get-versions.outputs.next-version }}

      - name: report to slack
        if: always()
        uses: navikt/eresept-actions/slack-notify@main
        with:
          status: "${{ job.status }}"
          username: "release ${{ inputs.application }}:${{ steps.get-versions.outputs.next-version }}"
          icon: ":docker:"
          title-success: "Released _*${{ inputs.application }}:${{ steps.get-versions.outputs.next-version }}*_ in ${{ env.exectime }} seconds"
          title-failure: "Release of _*${{ inputs.application }}*_ failed"
          title-cancelled: "Release of _*${{ inputs.application }}*_ was cancelled"
          message-success: "```${{ steps.get-versions.outputs.changelog }}```"
          webhook: ${{ secrets.webhook }}
