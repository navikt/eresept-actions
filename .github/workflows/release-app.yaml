name: Release application, re-usable
on:
  workflow_call:
    inputs:
      channel:
        description: 'Slack channel'
        required: false
        type: string
        default: 'eresept'
      footer:
        description: 'Slack footer'
        required: false
        type: string
        default: 'eresept Â© 2022'
      application:
        description: 'The application to release'
        required: true
        type: string
        # no default
      application-version:
        description: 'The version to release'
        required: false
        type: string
        # no default
    secrets:
      webhook:
        required: true
      token:
        required: true

jobs:
  release:
    name: Release ${{ inputs.application }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b #v3
        with:
          fetch-depth: 0
          repository: navikt/${{ inputs.application }}

      - name: Create settings.xml
        uses: whelk-io/maven-settings-xml-action@8a613be18185c8521e1501081adad5041840f2c8 #v20
        with:
          repositories: '[{ "id": "eresept-parent", "name": "github", "url": "https://maven.pkg.github.com/navikt/eresept-parent", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } }, { "id": "xerces", "name": "github", "url": "https://maven.pkg.github.com/navikt/xerces-xmlschema-1.1", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } }]'
          servers: '[{ "id": "eresept-parent", "username": "${{ github.actor }}", "password": "${{ secrets.token }}" }, { "id": "xerces", "username": "${{ github.actor }}", "password": "${{ secrets.token }}" }]'

      - uses: actions/setup-java@16cca5479d7c6b6843f6a6515640ba33c6501543 #v3.4.0
        with:
          distribution: 'temurin'
          java-version: '17'
          overwrite-settings: false

      - name: Cache local Maven repository
        uses: actions/cache@c3f1317a9e7b1ef106c153ac8c0f00fed3ddbc0d # v3.0.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}

      - name: Get start time
        id: starttime
        run: |
          echo "::set-output name=starttime::$(date +%s)"
          sudo timedatectl set-timezone "Europe/Oslo"

      - name: Compile and test
        run: mvn install

      - name: Get version numbers and changelog
        id: version
        run: |
          CURVERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          INPUT_VERSION=${{ inputs.application-version }}
          RELVERSION=$(echo ${INPUT_VERSION:-$CURVERSION}|sed 's/-.*//')
          echo "::set-output name=relversion::$RELVERSION"
          echo "::set-output name=nextversion::$(echo $RELVERSION|awk '{split($0,a,"."); b=a[3]+1;print a[1]"."a[2]"."b}')-SNAPSHOT"
          echo "::set-output name=appver::${{ inputs.application }}:$RELVERSION"
          echo "::set-output name=reldate::$(date '+%Y-%m-%d %H:%M:%S')"
          # multiline output
          echo "CHANGELOG<<EOF" >> $GITHUB_ENV
          git log $(git describe --tags --abbrev=0)..HEAD --oneline >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Configure git user
        run: |
          git config user.name "GitHub Actions Bot (${{ github.actor }})"
          git config user.email "actions@github.com"

      - name: Publish, tag
        id: tag
        run: |
          mvn --batch-mode versions:set -DnewVersion=${{ steps.version.outputs.relversion }} -DgenerateBackupPoms=false -DprocessAllModules=true
          git commit -am 'Commit new version ${{ steps.version.outputs.relversion }}, by ${{ github.actor }} [ci skip]'
          git tag -a v${{ steps.version.outputs.relversion }} -m 'tagging as v${{ steps.version.outputs.relversion }} [ci skip]'
          mvn --batch-mode clean install -DskipTests
          DOCKER_IMG="ghcr.io/$REPO/${GITHUB_REPOSITORY#*/}:${{ steps.version.outputs.relversion }}"
          DIR=$(dirname $(find . -name Dockerfile -maxdepth 2))
          echo "::set-output name=dockerimg::$DOCKER_IMG"
          echo "::set-output name=dockerdir::$DIR"

      - uses: docker/login-action@49ed152c8eca782a232dede0303416e8f356c37b # v2.0.0
        with:
          registry: ghcr.io
          username: navikt/${{ inputs.application }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@e551b19e49efd4e98792db7592c17c09b89db8d8 # v3.0.0
        with:
          context: ${{ steps.tag.outputs.dockerdir }}
          push: true
          build-args: version=${{ steps.version.outputs.relversion }} app_name=${{ inputs.application }}
          tags: ${{ steps.tag.outputs.dockerimg }}

      - name: Prepare for next
        run: |
          mvn --batch-mode versions:set -DnewVersion=${{ steps.version.outputs.nextversion }} -DgenerateBackupPoms=false -DprocessAllModules=true
          git commit -am 'Updated to new dev-version ${{ steps.version.outputs.nextversion }} after release by ${{ github.actor }} [ci skip]'
          git push -f origin v${{ steps.version.outputs.relversion }} main

      - name: Checkout badges
        uses: navikt/eresept-actions/badges-checkout@main

      - name: Calculate execution time
        id: exectime
        run: |
          END_TIME=$(date +%s)
          echo "::set-output name=exectime::$(( $END_TIME - ${{ steps.starttime.outputs.starttime }} ))"

      - name: Version badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'version'
          right: '${{ steps.version.outputs.relversion }}'
          color: 'blue'
          filename: 'version'
          logo: 'tag'

      - name: Release date badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'release date'
          right: '${{ steps.version.outputs.reldate }}'
          color: 'blue'
          filename: 'rel-date'
          logo: 'calendar'

      - name: Time used badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'release execution time'
          right: '${{ steps.exectime.outputs.exectime }}'
          color: 'blue'
          filename: 'rel-exec-time'
          logo: 'stopwatch'

      - name: Commit badges
        uses: navikt/eresept-actions/badges-commit@main

      - name: Summary
        run: |
          echo "### Released **${{ github.event.repository.name }}** in ${{ steps.exectime.outputs.exectime }} seconds" >> $GITHUB_STEP_SUMMARY

      - name: Report success?
        if: success()
        env:
          SLACK_CHANNEL: ${{ inputs.channel }}
          SLACK_WEBHOOK: ${{ secrets.webhook }}
          SLACK_USERNAME: "release ${{ steps.version.outputs.appver }}"
          SLACK_TITLE: "Released _*${{ steps.version.outputs.appver }}*_ in ${{ steps.exectime.outputs.exectime }} seconds"
          SLACK_MESSAGE: "```${{ env.CHANGELOG }}```"
          SLACK_COLOR: "good"
          SLACK_ICON_EMOJI: ":docker:"
          MSG_MINIMAL: true
          SLACK_FOOTER: "${{ inputs.footer }}"
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # v2
      - name: Report failure?
        if: failure()
        env:
          SLACK_CHANNEL: ${{ inputs.channel }}
          SLACK_WEBHOOK: ${{ secrets.webhook }}
          SLACK_USERNAME: "release ${{ inputs.application }}"
          SLACK_TITLE: "Release of _*${{ inputs.application }}*_ failed"
          SLACK_COLOR: "danger"
          SLACK_ICON_EMOJI: ":docker:"
          SLACK_MESSAGE: "See https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} for details"
          SLACK_FOOTER: "${{ inputs.footer }}"
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # v2
      - name: Report cancellation?
        if: cancelled()
        env:
          SLACK_CHANNEL: ${{ inputs.channel }}
          SLACK_WEBHOOK: ${{ secrets.webhook }}
          SLACK_USERNAME: "release ${{ inputs.application }}"
          SLACK_TITLE: "Release of _*${{ inputs.application }}*_ was cancelled"
          SLACK_MESSAGE: " "
          SLACK_COLOR: "warning"
          SLACK_ICON_EMOJI: ":docker:"
          MSG_MINIMAL: true
          SLACK_FOOTER: "${{ inputs.footer }}"
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # v2
