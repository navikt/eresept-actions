name: maven release application, re-usable
on:
  workflow_call:
    inputs:
      application:
        description: 'The application to release'
        required: true
        type: string
        # no default
      application-version:
        description: 'The version to release'
        required: false
        type: string
        # no default
      skip-tests:
        description: 'if execution of tests should be skipped'
        required: false
        type: boolean
        default: false
    secrets:
      webhook:
        required: true
      token:
        required: true

jobs:
  release:
    name: Release ${{ inputs.application }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab #v3.5.2
        with:
          fetch-depth: 0
          repository: navikt/${{ inputs.application }}

      - name: Create settings.xml
        uses: whelk-io/maven-settings-xml-action@7c60eb95b2d5ec18f2e0e29f34c9ed69475e7a96 #v21
        with:
          repositories: '[{ "id": "eresept-parent", "name": "github", "url": "https://maven.pkg.github.com/navikt/eresept-parent", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } }, { "id": "xerces", "name": "github", "url": "https://maven.pkg.github.com/navikt/xerces-xmlschema-1.1", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } }]'
          servers: '[{ "id": "eresept-parent", "username": "${{ github.actor }}", "password": "${{ secrets.token }}" }, { "id": "xerces", "username": "${{ github.actor }}", "password": "${{ secrets.token }}" }]'

      - uses: actions/setup-java@5ffc13f4174014e2d4d4572b3d74c3fa61aeb2c2 #v3.11.0
        with:
          distribution: 'temurin'
          java-version: '17'
          overwrite-settings: false

      - name: Cache local Maven repository
        uses: actions/cache@88522ab9f39a2ea568f7027eddc7d8d8bc9d59c8 # v3.3.1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ inputs.application }}

      - name: Get start time
        run: |
          echo "starttime=$(date +%s)" >> $GITHUB_ENV
          sudo timedatectl set-timezone "Europe/Oslo"

      - name: Compile and test
        run: |
          SKIPTESTS=$(if [ "${{ inputs.skip-tests }}" = "true" ]; then echo "-DskipTests -Ddetekt.skip=true"; else echo ""; fi) 
          mvn install --no-transfer-progress $SKIPTESTS

      - name: Get version numbers and changelog
        run: |
          CURVERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          INPUT_VERSION=${{ inputs.application-version }}
          RELVERSION=$(echo ${INPUT_VERSION:-$CURVERSION}|sed 's/-.*//')
          echo "relversion=$RELVERSION" >> $GITHUB_ENV
          echo "nextversion=$(echo $RELVERSION|awk '{split($0,a,"."); b=a[3]+1;print a[1]"."a[2]"."b}')-SNAPSHOT" >> $GITHUB_ENV
          echo "appver=${{ inputs.application }}:$RELVERSION" >> $GITHUB_ENV
          echo "reldate=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          # multiline output
          delim="EOF--$(date +%s)"
          echo "CHANGELOG<<$delim" >> $GITHUB_ENV
          git log $(git describe --tags --abbrev=0)..HEAD --oneline >> $GITHUB_ENV
          echo "$delim" >> $GITHUB_ENV

      - name: Configure git user
        run: |
          git config user.name "GitHub Actions Bot (${{ github.actor }})"
          git config user.email "actions@github.com"

      - name: Publish, tag
        run: |
          mvn --batch-mode versions:set -DnewVersion=${{ env.relversion }} -DgenerateBackupPoms=false -DprocessAllModules=true
          git commit -am 'Commit new version ${{ env.relversion }}, by ${{ github.actor }} [ci skip]'
          git tag -a v${{ env.relversion }} -m 'tagging as v${{ env.relversion }} [ci skip]'
          mvn --batch-mode clean install -DskipTests -Ddetekt.skip=true
#          DOCKER_IMG="ghcr.io/navikt/${{ inputs.application }}/${GITHUB_REPOSITORY#*/}:${{ env.relversion }}"
#          DIR=$(dirname $(find . -name Dockerfile -maxdepth 2))
#          echo "dockerimg=$DOCKER_IMG" >> $GITHUB_ENV
#          echo "dockerdir=$DIR" >> $GITHUB_ENV

      - name: Docker build and push
        uses: nais/docker-build-push@70a17eca8bd2f5c57235c72d977372be9efa0586 # v0.7.0
        with:
          team: teameresept
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}
          tag: ${{ env.relversion }}
          build_args: |
            version=${{ env.relversion }}
            app_name=${{ inputs.application }}

#      - uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
#        with:
#          registry: ghcr.io
#          username: navikt/${{ inputs.application }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
#        with:
#          context: ${{ env.dockerdir }}
#          push: true
#          pull: true
#          build-args: |
#            "version=${{ env.relversion }}"
#            "app_name=${{ inputs.application }}"
#          tags: ${{ env.dockerimg }}

      - name: Prepare for next
        run: |
          mvn --batch-mode versions:set -DnewVersion=${{ env.nextversion }} -DgenerateBackupPoms=false -DprocessAllModules=true
          git commit -am 'Updated to new dev-version ${{ env.nextversion }} after release by ${{ github.actor }} [ci skip]'
          git push -f origin v${{ env.relversion }} main

      - name: Checkout badges
        uses: navikt/eresept-actions/badges-checkout@main

      - name: Calculate execution time
        run: |
          END_TIME=$(date +%s)
          echo "exectime=$(( $END_TIME - ${{ env.starttime }} ))" >> $GITHUB_ENV

      - name: Version badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'version'
          right: '${{ env.relversion }}'
          color: 'blue'
          filename: 'version'
          logo: 'tag'

      - name: Release date badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'release date'
          right: '${{ env.reldate }}'
          color: 'blue'
          filename: 'rel-date'
          logo: 'calendar'

      - name: Time used badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'release execution time'
          right: '${{ env.exectime }}'
          color: 'blue'
          filename: 'rel-exec-time'
          logo: 'stopwatch'

      - name: Commit badges
        uses: navikt/eresept-actions/badges-commit@main

      - name: Summary
        run: |
          echo "### Released **${{ github.event.repository.name }}** in ${{ env.exectime }} seconds" >> $GITHUB_STEP_SUMMARY

      - name: report to slack
        if: always()
        uses: navikt/eresept-actions/slack-notify@main
        with:
          status: "${{ job.status }}"
          username: "release ${{ env.appver }}"
          icon: ":docker:"
          title-success: "Released _*${{ env.appver }}*_ in ${{ env.exectime }} seconds"
          title-failure: "Release of _*${{ inputs.application }}*_ failed"
          title-cancelled: "Release of _*${{ inputs.application }}*_ was cancelled"
          message-success: "```${{ env.CHANGELOG }}```"
          webhook: ${{ secrets.webhook }}
