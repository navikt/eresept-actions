name: Release application, re-usable
on:
  workflow_call:
    inputs:
      channel:
        description: 'Slack channel'
        required: false
        type: string
        default: 'eresept'
      footer:
        description: 'Slack footer'
        required: false
        type: string
        default: 'eresept Â© 2022'
      application:
        description: 'The application to release'
        required: true
        type: string
        # no default
      application-version:
        description: 'The version to release'
        required: false
        type: string
        # no default
      skip-tests:
        description: 'if execution of tests should be skipped'
        required: false
        type: boolean
        default: false
    secrets:
      webhook:
        required: true
      token:
        required: true

jobs:
  release:
    name: Release ${{ inputs.application }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c #v3.3.0
        with:
          fetch-depth: 0
          repository: navikt/${{ inputs.application }}

      - name: Create settings.xml
        uses: whelk-io/maven-settings-xml-action@7c60eb95b2d5ec18f2e0e29f34c9ed69475e7a96 #v21
        with:
          repositories: '[{ "id": "eresept-parent", "name": "github", "url": "https://maven.pkg.github.com/navikt/eresept-parent", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } }, { "id": "xerces", "name": "github", "url": "https://maven.pkg.github.com/navikt/xerces-xmlschema-1.1", "releases": { "enabled": "true" }, "snapshots": { "enabled": "false" } }]'
          servers: '[{ "id": "eresept-parent", "username": "${{ github.actor }}", "password": "${{ secrets.token }}" }, { "id": "xerces", "username": "${{ github.actor }}", "password": "${{ secrets.token }}" }]'

      - uses: actions/setup-java@1df8dbefe2a8cbc99770194893dd902763bee34b #v3.9.0
        with:
          distribution: 'temurin'
          java-version: '17'
          overwrite-settings: false

      - name: Cache local Maven repository
        uses: actions/cache@627f0f41f6904a5b1efbaed9f96d9eb58e92e920 # v3.2.4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ inputs.application }}

      - name: Get start time
        run: |
          echo "starttime=$(date +%s)" >> $GITHUB_ENV
          sudo timedatectl set-timezone "Europe/Oslo"

      - name: Compile and test
        run: |
          SKIPTESTS=$(if [ "${{ inputs.skip-tests }}" = "true" ]; then echo "-DskipTests"; else echo ""; fi) 
          mvn install $SKIPTESTS

      - name: Get version numbers and changelog
        run: |
          CURVERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          INPUT_VERSION=${{ inputs.application-version }}
          RELVERSION=$(echo ${INPUT_VERSION:-$CURVERSION}|sed 's/-.*//')
          echo "relversion=$RELVERSION" >> $GITHUB_ENV
          echo "nextversion=$(echo $RELVERSION|awk '{split($0,a,"."); b=a[3]+1;print a[1]"."a[2]"."b}')-SNAPSHOT" >> $GITHUB_ENV
          echo "appver=${{ inputs.application }}:$RELVERSION" >> $GITHUB_ENV
          echo "reldate=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_ENV
          # multiline output
          delim="EOF--$(date +%s)"
          echo "CHANGELOG<<$delim" >> $GITHUB_ENV
          git log $(git describe --tags --abbrev=0)..HEAD --oneline >> $GITHUB_ENV
          echo "$delim" >> $GITHUB_ENV

      - name: Configure git user
        run: |
          git config user.name "GitHub Actions Bot (${{ github.actor }})"
          git config user.email "actions@github.com"

      - name: Publish, tag
        run: |
          mvn --batch-mode versions:set -DnewVersion=${{ env.relversion }} -DgenerateBackupPoms=false -DprocessAllModules=true
          git commit -am 'Commit new version ${{ env.relversion }}, by ${{ github.actor }} [ci skip]'
          git tag -a v${{ env.relversion }} -m 'tagging as v${{ env.relversion }} [ci skip]'
          mvn --batch-mode clean install -DskipTests
          DOCKER_IMG="ghcr.io/navikt/${{ inputs.application }}/${GITHUB_REPOSITORY#*/}:${{ env.relversion }}"
          DIR=$(dirname $(find . -name Dockerfile -maxdepth 2))
          echo "dockerimg=$DOCKER_IMG" >> $GITHUB_ENV
          echo "dockerdir=$DIR" >> $GITHUB_ENV

      - uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
        with:
          registry: ghcr.io
          username: navikt/${{ inputs.application }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@37abcedcc1da61a57767b7588cb9d03eb57e28b3 # v3.3.0
        with:
          context: ${{ env.dockerdir }}
          push: true
          pull: true
          build-args: |
            "version=${{ env.relversion }}"
            "app_name=${{ inputs.application }}"
          tags: ${{ env.dockerimg }}

      - name: Prepare for next
        run: |
          mvn --batch-mode versions:set -DnewVersion=${{ env.nextversion }} -DgenerateBackupPoms=false -DprocessAllModules=true
          git commit -am 'Updated to new dev-version ${{ env.nextversion }} after release by ${{ github.actor }} [ci skip]'
          git push -f origin v${{ env.relversion }} main

      - name: Checkout badges
        uses: navikt/eresept-actions/badges-checkout@main

      - name: Calculate execution time
        run: |
          END_TIME=$(date +%s)
          echo "exectime=$(( $END_TIME - ${{ env.starttime }} ))" >> $GITHUB_ENV

      - name: Version badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'version'
          right: '${{ env.relversion }}'
          color: 'blue'
          filename: 'version'
          logo: 'tag'

      - name: Release date badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'release date'
          right: '${{ env.reldate }}'
          color: 'blue'
          filename: 'rel-date'
          logo: 'calendar'

      - name: Time used badge
        uses: navikt/eresept-actions/badges-create@main
        with:
          left: 'release execution time'
          right: '${{ env.exectime }}'
          color: 'blue'
          filename: 'rel-exec-time'
          logo: 'stopwatch'

      - name: Commit badges
        uses: navikt/eresept-actions/badges-commit@main

      - name: Summary
        run: |
          echo "### Released **${{ github.event.repository.name }}** in ${{ env.exectime }} seconds" >> $GITHUB_STEP_SUMMARY

      - name: Report success?
        if: success()
        env:
          SLACK_CHANNEL: ${{ inputs.channel }}
          SLACK_WEBHOOK: ${{ secrets.webhook }}
          SLACK_USERNAME: "release ${{ env.appver }}"
          SLACK_TITLE: "Released _*${{ env.appver }}*_ in ${{ env.exectime }} seconds"
          SLACK_MESSAGE: "```${{ env.CHANGELOG }}```"
          SLACK_COLOR: "good"
          SLACK_ICON_EMOJI: ":docker:"
          MSG_MINIMAL: true
          SLACK_FOOTER: "${{ inputs.footer }}"
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # v2
      - name: Report failure?
        if: failure()
        env:
          SLACK_CHANNEL: ${{ inputs.channel }}
          SLACK_WEBHOOK: ${{ secrets.webhook }}
          SLACK_USERNAME: "release ${{ inputs.application }}"
          SLACK_TITLE: "Release of _*${{ inputs.application }}*_ failed"
          SLACK_COLOR: "danger"
          SLACK_ICON_EMOJI: ":docker:"
          SLACK_MESSAGE: "See https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }} for details"
          SLACK_FOOTER: "${{ inputs.footer }}"
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # v2
      - name: Report cancellation?
        if: cancelled()
        env:
          SLACK_CHANNEL: ${{ inputs.channel }}
          SLACK_WEBHOOK: ${{ secrets.webhook }}
          SLACK_USERNAME: "release ${{ inputs.application }}"
          SLACK_TITLE: "Release of _*${{ inputs.application }}*_ was cancelled"
          SLACK_MESSAGE: " "
          SLACK_COLOR: "warning"
          SLACK_ICON_EMOJI: ":docker:"
          MSG_MINIMAL: true
          SLACK_FOOTER: "${{ inputs.footer }}"
        uses: rtCamp/action-slack-notify@12e36fc18b0689399306c2e0b3e0f2978b7f1ee7 # v2
