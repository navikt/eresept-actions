# In this workflow, we use a dedicated branch for storing the badges.
# It assumes that the badges branch already exists. That branch can otherwise
# be empty, as its only purpose is to store the coverage badges. Why? Well, if
# our main branch has required checks or reviews, the default GITHUB_TOKEN won't
# be able to push to it. By storing the badges in a dedicated branch, this is not
# an issue (just don't put any required checks or required reviews on the badges
# branch). Note that since we won't be storing anything else in the badges branch,
# we just put them in the root of that branch.
#
# IMPORTANT: Take note of the 2 checkout steps that are necessary for this variation.
# The first is the usual checkout step. The second checks out the dedicated badges branch
# (see the ref input) nested inside the other in the path badges (see the path input).
# So locally within the rest of this workflow run, we'll have access to the badges branch
# within a badges directory.
#
# It does nothing if the badges branch doesn't exist.

name: 'checks out badges branch'
description: 'checks if we have a dedicated badges branch, and if so checks it out'
inputs:
  repo:
    description: 'the repository'
    required: true
runs:
  using: "composite"
  steps:
    - shell: bash
      run: echo "BADGES=$($GITHUB_ACTION_PATH/../src/branch-exists.sh)" >> $GITHUB_ENV
    - if: ${{ env.BADGES == 'true' && github.event_name != 'pull_request' }}
      uses: actions/checkout@d632683dd7b4114ad314bca15554477dd762a938 #v4.1.6 checks out the branch that stores the badges
      with:
        ref: badges
        path: badges
