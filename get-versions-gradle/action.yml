name: 'gets version numbers and changelog and more'
description: 'gets version numbers and more and outputs to github env'
inputs:
  application:
    description: 'The application to release'
    required: true
  application-version:
    description: 'The version to release'
    required: false
outputs:
  version-file:
    description: "file where version is defined"
    value: ${{ steps.get-versions.outputs.version-file }}
  current-version:
    description: "the current version"
    value: ${{ steps.get-versions.outputs.current-version }}
  release-version:
    description: "the release version"
    value: ${{ steps.get-versions.outputs.release-version }}
  next-version:
    description: "the next version number"
    value: ${{ steps.get-versions.outputs.next-version }}
  app-version:
    description: "application version"
    value: ${{ steps.get-versions.outputs.app-version }}
  release-date:
    description: "release date"
    value: ${{ steps.get-versions.outputs.release-date }}
  docker-dir:
    description: "directory of docker file"
    value: ${{ steps.get-versions.outputs.docker-dir }}
  changelog:
    description: "Changelog"
    value: ${{ steps.get-versions.outputs.changelog }}

runs:
  using: "composite"
  steps:
    - id: get-versions
      shell: bash
      run: |
        git config user.email "${{ github.actor }}@users.noreply.github.com" && git config user.name "Github Actions"
        VERFILE=$($GITHUB_ACTION_PATH/../src/curversion-file-gradle.sh)
        CURVERSION=$($GITHUB_ACTION_PATH/../src/curversion-gradle.sh $VERFILE)
        INPUT_VERSION=${{ inputs.application-version }}
        RELVERSION=$(echo ${INPUT_VERSION:-$CURVERSION}|sed 's/-.*//')
        echo "version-file=$VERFILE" >> $GITHUB_OUTPUT
        echo "current-version=$CURVERSION" >> $GITHUB_OUTPUT
        echo "release-version=$(echo ${INPUT_VERSION:-$CURVERSION}|sed 's/-.*//')" >> $GITHUB_OUTPUT
        echo "next-version=$($GITHUB_ACTION_PATH/../src/nextversion.sh $RELVERSION)" >> $GITHUB_OUTPUT
        echo "app-version=${{ inputs.application }}:$RELVERSION" >> $GITHUB_OUTPUT
        echo "release-date=$(date '+%Y-%m-%d %H:%M:%S')" >> $GITHUB_OUTPUT
        echo "docker-dir=$(dirname $(find . -name Dockerfile -maxdepth 2))" >> $GITHUB_OUTPUT
        # multiline output
        delim="EOF--$(date +%s)"
        echo "changelog<<$delim" >> $GITHUB_OUTPUT
        git log $(git describe --tags --abbrev=0)..HEAD --oneline >> $GITHUB_OUTPUT
        echo "$delim" >> $GITHUB_OUTPUT
